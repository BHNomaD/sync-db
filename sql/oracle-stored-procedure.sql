DECLARE RET NUMBER; BEGIN CLEAN('ALL', RET); END;

CREATE OR REPLACE PROCEDURE CLEAN(OPERATION IN VARCHAR2, RET OUT NUMBER)
IS
  VAL1 NUMBER;
  VAL2 NUMBER;
BEGIN

  VAL2 := 0;
  VAL1 := 1;
  IF OPERATION = 'ALL' OR OPERATION = 'TRUNCATE' OR OPERATION = 'ALL_BUT_DROP_TABLE' THEN
    EXECUTE IMMEDIATE 'TRUNCATE TABLE SYNC_TABLE_INFO';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE BIOMETRIC';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE EVENT_LOG';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE TB1';
    COMMIT ;
    VAL2 := VAL2 + VAL1;
  END IF;

  VAL1 := 2;
  IF OPERATION = 'ALL' OR OPERATION = 'DROP_TRIGGER' OR OPERATION = 'ALL_BUT_DROP_TABLE' THEN
    EXECUTE IMMEDIATE 'DROP TRIGGER TRIGGER_INSERT_BIOMETRIC';
    EXECUTE IMMEDIATE 'DROP TRIGGER TRIGGER_DELETE_BIOMETRIC';
    EXECUTE IMMEDIATE 'DROP TRIGGER TRIGGER_UPDATE_BIOMETRIC';
    EXECUTE IMMEDIATE 'DROP TRIGGER TRIGGER_INSERT_TB1';
    EXECUTE IMMEDIATE 'DROP TRIGGER TRIGGER_DELETE_TB1';
    EXECUTE IMMEDIATE 'DROP TRIGGER TRIGGER_UPDATE_TB1';
    VAL2 := VAL2 + VAL1;
  END IF;

  VAL1 := 3;
  IF OPERATION = 'ALL' OR OPERATION = 'DROP_TABLE' THEN
    EXECUTE IMMEDIATE 'DROP TABLE EVENT_LOG';
    EXECUTE IMMEDIATE 'DROP TABLE SYNC_TABLE_INFO';
    VAL2 := VAL2 + VAL1;
  END IF;

  RET := VAL2;

END;
